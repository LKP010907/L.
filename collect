/* 将一个字符串反转输出
#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
#include<string.h>
void reverse(char* left, char* right) {
	char smp = 0;
	while (left < right) {
		smp = *left;
		*left = *right;
		*right = smp;
		left++;
		right--;

	}
}
int main() {
	char arr[] = "abcdef";
	int len = strlen(arr);
	reverse(arr, arr+len-1);
	printf("%s", arr);

	
} */

/* 选择排序算法，对一个数组进行排序
#define _CRT_SECURE_NO_WARNINGS 
#include<stdio.h>
void select(int *arr, int len) {
	int tmp = 0;
	int i, j=0;
	int smp = 0;
	for (i = 0; i < len-1; i++) {
		tmp = i;
		for (j = i+1; j < len; j++) {
			if (arr[tmp] > arr[j]) {
				tmp = j;
			}
		}
		if (i != tmp) {
			smp = arr[i];
			arr[i] = arr[tmp];
			arr[tmp] = smp;
		}
	}
}
void get(int arr[], int len) {
	int i;
	for (i = 0; i < len; i++) {
		printf("%d", arr[i]);
		printf(" ");
	}	
}
int main() {
	int arr[] = { 3,5,15,6,9,11,25 };
	int len = sizeof(arr) / sizeof(arr[0]);
	select(arr, len);
	get(arr, len);
} */

//实现递归计算给定正整数的阶乘
//#define _CRT_SECURE_NO_WARNINGS 
//#include<stdio.h>
//int fac(int n) {
//	int f;
//	if (n <= 0) {
//		printf("输入错误");
//	}
//	else if(n==1)
//	{
//		f = 1;
//	}
//	else
//	{
//		f = fac(n - 1) * n;
//	}
//	return f;
//}
//int main() {
//	int n;
//	scanf("%d", &n);
//	int a;
//	a = fac(n);
//	printf("%d", a);	
//}

////冒泡
//#define _CRT_SECURE_NO_WARNINGS 
//#include<stdio.h>
//void gets(int arr[], int len) {
//	int i;
//	for (i = 0; i < len; i++) {
//		printf("%d", arr[i]);
//		printf(" ");
//	}
//}
//
//int main() {
//	int arr[] = { 9,3,15,36,22,45 };
//	int len = sizeof(arr) / sizeof(arr[0]);
//	int i, j;
//	int tmp;
//	for (i = 0; i < len-1; i++) { // len-1 不用与自己比较
//		for (j = 0; j < len - i-1 ; j++) {  // len-i-1 每一趟少比较一个数
//			if (arr[j] < arr[j+1]) {
//				tmp = arr[j];
//				arr[j] = arr[j+1];
//				arr[j+1] = tmp;
//			}
//		}
//	}
//	gets(arr,len);
//}
